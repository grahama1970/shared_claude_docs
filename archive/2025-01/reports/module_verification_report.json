{
  "timestamp": "2025-06-09 14:57:58.732278",
  "modules": [
    {
      "module": "SPARTA",
      "path": "/home/graham/workspace/experiments/sparta",
      "has_venv": true,
      "has_requirements": false,
      "has_pyproject": true,
      "main_files": [
        "src/granger_security_middleware_simple.py",
        "src/granger_common/rate_limiter.py",
        "src/granger_common/schema_manager.py",
        "src/granger_common/__init__.py",
        "src/granger_common/pdf_handler.py",
        "src/sparta/update_sparta_handlers.py",
        "src/sparta/update_sparta_real_api.py",
        "src/sparta/__init__.py",
        "src/sparta/config.py",
        "src/sparta/demonstrate_module_communication.py",
        "src/sparta/cli/slash_mcp_mixin.py",
        "src/sparta/cli/graph_commands.py",
        "src/sparta/cli/validators.py",
        "src/sparta/cli/granger_verify.py",
        "src/sparta/cli/schemas.py",
        "src/sparta/cli/__init__.py",
        "src/sparta/cli/fastmcp_integration.py",
        "src/sparta/cli/formatters.py",
        "src/sparta/cli/app.py",
        "src/sparta/cli/granger_slash_mcp_mixin.py",
        "src/sparta/handlers/__init__.py",
        "src/sparta/integrations/sparta_module_real_api.py",
        "src/sparta/integrations/sparta_module_impl.py",
        "src/sparta/integrations/sparta_module_with_mock.py",
        "src/sparta/integrations/__init__.py",
        "src/sparta/integrations/real_apis_fixed.py",
        "src/sparta/integrations/sparta_module_new.py",
        "src/sparta/integrations/sparta_module_broken.py",
        "src/sparta/integrations/sparta_module.py",
        "src/sparta/integrations/sparta_module_updated.py",
        "src/sparta/integrations/sparta_mock_data.py",
        "src/sparta/integrations/real_apis.py",
        "src/sparta/core/downloader_utils.py",
        "src/sparta/core/downloader_strategies.py",
        "src/sparta/core/alternative_finder_llm.py",
        "src/sparta/core/mitre_integration.py",
        "src/sparta/core/quality_control.py",
        "src/sparta/core/api_config.py",
        "src/sparta/core/__init__.py",
        "src/sparta/core/web_search_integration.py",
        "src/sparta/core/api_preferred_downloader.py",
        "src/sparta/core/preflight.py",
        "src/sparta/core/downloader_base.py",
        "src/sparta/core/deduplication.py",
        "src/sparta/core/d3fend_downloader_enhancement.py",
        "src/sparta/core/d3fend_extractor.py",
        "src/sparta/core/download_cache.py",
        "src/sparta/core/alternative_finder.py",
        "src/sparta/core/space_stix.py",
        "src/sparta/core/downloader_enhanced.py",
        "src/sparta/core/error_context.py",
        "src/sparta/core/quality_control_enhanced.py",
        "src/sparta/core/downloader.py",
        "src/sparta/core/extractors/d3fend_extractor.py",
        "src/sparta/core/graph/__init__.py",
        "src/sparta/core/graph/entity_extractor.py",
        "src/sparta/core/graph/query_builder.py",
        "src/sparta/core/graph/arango_operations.py",
        "src/sparta/core/reports/claude_reporter_adapter.py",
        "src/sparta/core/reports/report_config.py",
        "src/sparta/core/reports/__init__.py",
        "src/sparta/core/reports/universal_report_generator.py",
        "src/sparta/core/reports/pytest_report_runner.py",
        "src/sparta/core/reports/agent_report_adapter.py",
        "src/sparta/core/reports/simple_html_reporter.py",
        "src/sparta/core/reports/_archive_custom_reporters/simple_html_report.py",
        "src/sparta/core/reports/_archive_custom_reporters/interactive_report.py",
        "src/sparta/core/reports/_archive_custom_reporters/universal_report_generator.py",
        "src/sparta/core/reports/_archive_custom_reporters/enhanced_test_reporter.py",
        "src/sparta/core/reports/_archive_custom_reporters/html_report_generator.py",
        "src/sparta/core/reports/_archive_custom_reporters/cli.py",
        "src/sparta/core/ingestion/sparta_ingestor.py",
        "src/sparta/mcp/fastmcp_server.py",
        "src/sparta/mcp/schema.py",
        "src/sparta/mcp/__init__.py",
        "src/sparta/mcp/wrapper.py",
        "src/sparta/mcp/sparta_prompts.py",
        "src/sparta/mcp/server.py",
        "src/sparta/mcp/prompts.py"
      ],
      "test_results": [
        {
          "test_file": "/home/graham/workspace/experiments/sparta/tests/test_api_preference.py",
          "passed": false,
          "error": "Cannot read termcap database;\nusing dumb terminal settings.\n",
          "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.11, pytest-8.4.0, pluggy-1.6.0 -- /home/graham/workspace/shared_claude_docs/.venv/bin/python\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.11', 'Platform': 'Linux-6.8.0-57-generic-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.0', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'claude-test-reporter': '0.2.1', 'allure-pytest': '2.14.2', 'json-report': '1.5.0', 'asyncio': '1.0.0', 'anyio': '4.9.0'}}\nrootdir: /home/graham/workspace/experiments/sparta\nconfigfile: pytest.ini\nplugins: metadata-3.1.1, claude-test-reporter-0.2.1, allure-pytest-2.14.2, json-report-1.5.0, asyncio-1.0.0, anyio-4.9.0\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 9 items\n\ntests/test_api_preference.py::TestAPIPreference::test_api_configs_loaded PASSED [ 11%]\ntests/test_api_preference.py::TestAPIPreference::tes",
          "return_code": 1
        },
        {
          "test_file": "/home/graham/workspace/experiments/sparta/tests/test_nasa_direct.py",
          "passed": true,
          "error": "Cannot read termcap database;\nusing dumb terminal settings.\n",
          "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.11, pytest-8.4.0, pluggy-1.6.0 -- /home/graham/workspace/shared_claude_docs/.venv/bin/python\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.11', 'Platform': 'Linux-6.8.0-57-generic-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.0', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'claude-test-reporter': '0.2.1', 'allure-pytest': '2.14.2', 'json-report': '1.5.0', 'asyncio': '1.0.0', 'anyio': '4.9.0'}}\nrootdir: /home/graham/workspace/experiments/sparta\nconfigfile: pytest.ini\nplugins: metadata-3.1.1, claude-test-reporter-0.2.1, allure-pytest-2.14.2, json-report-1.5.0, asyncio-1.0.0, anyio-4.9.0\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 1 item\n\ntests/test_nasa_direct.py::test_nasa PASSED                              [100%]\n\n============================== 1 passed in 0.31s ==========",
          "return_code": 0
        }
      ],
      "import_test": true
    },
    {
      "module": "YouTube Transcripts",
      "path": "/home/graham/workspace/experiments/youtube_transcripts",
      "has_venv": true,
      "has_requirements": false,
      "has_pyproject": true,
      "main_files": [
        "src/granger_common/rate_limiter.py",
        "src/granger_common/schema_manager.py",
        "src/granger_common/__init__.py",
        "src/granger_common/pdf_handler.py",
        "src/youtube_transcripts/rate_limiter.py",
        "src/youtube_transcripts/database_adapter.py",
        "src/youtube_transcripts/search_widener.py",
        "src/youtube_transcripts/error_handler.py",
        "src/youtube_transcripts/unified_search.py",
        "src/youtube_transcripts/circular_ref_detector.py",
        "src/youtube_transcripts/citation_detector.py",
        "src/youtube_transcripts/link_extractor.py",
        "src/youtube_transcripts/debug_import.py",
        "src/youtube_transcripts/deepretrieval_optimizer.py",
        "src/youtube_transcripts/database_config.py",
        "src/youtube_transcripts/storage_operations.py",
        "src/youtube_transcripts/search_enhancements.py",
        "src/youtube_transcripts/research_pipeline.py",
        "src/youtube_transcripts/check_hub_consistency.py",
        "src/youtube_transcripts/fetch_transcripts_cron.py",
        "src/youtube_transcripts/youtube_search.py",
        "src/youtube_transcripts/partial_data_handler.py",
        "src/youtube_transcripts/__init__.py",
        "src/youtube_transcripts/arangodb_enhanced.py",
        "src/youtube_transcripts/graph_memory_integration.py",
        "src/youtube_transcripts/hub_fastmcp_server.py",
        "src/youtube_transcripts/config_20250605_180052.py",
        "src/youtube_transcripts/smart_visual_extractor.py",
        "src/youtube_transcripts/visual_extractor.py",
        "src/youtube_transcripts/module_boundaries.py",
        "src/youtube_transcripts/youtube_error_handler.py",
        "src/youtube_transcripts/config.py",
        "src/youtube_transcripts/arango_connection.py",
        "src/youtube_transcripts/arango_integration.py",
        "src/youtube_transcripts/arango_operations.py",
        "src/youtube_transcripts/unified_search_v2.py",
        "src/youtube_transcripts/speaker_extractor.py",
        "src/youtube_transcripts/hub_prompts_implementation.py",
        "src/youtube_transcripts/orchestrator_integration.py",
        "src/youtube_transcripts/performance_monitor.py",
        "src/youtube_transcripts/metadata_extractor.py",
        "src/youtube_transcripts/research_analyzer.py",
        "src/youtube_transcripts/content_classifier.py",
        "src/youtube_transcripts/error_handler_v2.py",
        "src/youtube_transcripts/unified_search_config.py",
        "src/youtube_transcripts/cli/slash_mcp_mixin.py",
        "src/youtube_transcripts/cli/app_enhanced.py",
        "src/youtube_transcripts/cli/__init__.py",
        "src/youtube_transcripts/cli/app_scientific.py",
        "src/youtube_transcripts/cli/app.py",
        "src/youtube_transcripts/handlers/__init__.py",
        "src/youtube_transcripts/integrations/youtube_transcripts_module.py",
        "src/youtube_transcripts/integrations/__init__.py",
        "src/youtube_transcripts/agents/agent_manager.py",
        "src/youtube_transcripts/agents/orchestrator_agent.py",
        "src/youtube_transcripts/agents/content_analyzer_agent.py",
        "src/youtube_transcripts/agents/__init__.py",
        "src/youtube_transcripts/agents/search_optimizer_agent.py",
        "src/youtube_transcripts/agents/transcript_fetcher_agent.py",
        "src/youtube_transcripts/agents/base_agent.py",
        "src/youtube_transcripts/core/database.py",
        "src/youtube_transcripts/core/validators.py",
        "src/youtube_transcripts/core/transcript.py",
        "src/youtube_transcripts/core/__init__.py",
        "src/youtube_transcripts/core/database_v2.py",
        "src/youtube_transcripts/core/models.py",
        "src/youtube_transcripts/core/utils/tree_sitter_extractors.py",
        "src/youtube_transcripts/core/utils/spacy_utils.py",
        "src/youtube_transcripts/core/utils/embedding_utils.py",
        "src/youtube_transcripts/core/utils/json_utils.py",
        "src/youtube_transcripts/core/utils/spacy_scientific.py",
        "src/youtube_transcripts/core/utils/__init__.py",
        "src/youtube_transcripts/core/utils/tree_sitter_metadata.py",
        "src/youtube_transcripts/core/utils/tree_sitter_utils.py",
        "src/youtube_transcripts/core/utils/tree_sitter_traversal.py",
        "src/youtube_transcripts/core/utils/embedding_wrapper.py",
        "src/youtube_transcripts/core/utils/litellm_cache.py",
        "src/youtube_transcripts/core/utils/log_utils.py",
        "src/youtube_transcripts/core/utils/tree_sitter_language_mappings.py",
        "src/youtube_transcripts/core/utils/github_extractor.py",
        "src/youtube_transcripts/mcp/__main__.py",
        "src/youtube_transcripts/mcp/schemas.py",
        "src/youtube_transcripts/mcp/schema.py",
        "src/youtube_transcripts/mcp/visual_prompts.py",
        "src/youtube_transcripts/mcp/__init__.py",
        "src/youtube_transcripts/mcp/wrapper.py",
        "src/youtube_transcripts/mcp/formatters.py",
        "src/youtube_transcripts/mcp/server.py",
        "src/youtube_transcripts/mcp/youtube_prompts.py",
        "src/youtube_transcripts/mcp/prompts.py"
      ],
      "test_results": [
        {
          "test_file": "/home/graham/workspace/experiments/youtube_transcripts/tests/test_minimal.py",
          "passed": false,
          "error": "Cannot read termcap database;\nusing dumb terminal settings.\n",
          "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.11, pytest-8.4.0, pluggy-1.6.0 -- /home/graham/workspace/shared_claude_docs/.venv/bin/python\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.11', 'Platform': 'Linux-6.8.0-57-generic-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.0', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'claude-test-reporter': '0.2.1', 'allure-pytest': '2.14.2', 'json-report': '1.5.0', 'asyncio': '1.0.0', 'anyio': '4.9.0'}}\nrootdir: /home/graham/workspace/experiments/youtube_transcripts\nconfigfile: pytest.ini\nplugins: metadata-3.1.1, claude-test-reporter-0.2.1, allure-pytest-2.14.2, json-report-1.5.0, asyncio-1.0.0, anyio-4.9.0\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 0 items\n\n============================ no tests ran in 0.01s =============================\n",
          "return_code": 5
        },
        {
          "test_file": "/home/graham/workspace/experiments/youtube_transcripts/tests/test_with_reporter.py",
          "passed": false,
          "error": "Cannot read termcap database;\nusing dumb terminal settings.\n",
          "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.11, pytest-8.4.0, pluggy-1.6.0 -- /home/graham/workspace/shared_claude_docs/.venv/bin/python\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.11', 'Platform': 'Linux-6.8.0-57-generic-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.0', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'claude-test-reporter': '0.2.1', 'allure-pytest': '2.14.2', 'json-report': '1.5.0', 'asyncio': '1.0.0', 'anyio': '4.9.0'}}\nrootdir: /home/graham/workspace/experiments/youtube_transcripts\nconfigfile: pytest.ini\nplugins: metadata-3.1.1, claude-test-reporter-0.2.1, allure-pytest-2.14.2, json-report-1.5.0, asyncio-1.0.0, anyio-4.9.0\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 0 items\n\n============================ no tests ran in 0.29s =============================\n",
          "return_code": 5
        },
        {
          "test_file": "/home/graham/workspace/experiments/youtube_transcripts/tests/test_concurrent_processing.py",
          "passed": true,
          "error": "Cannot read termcap database;\nusing dumb terminal settings.\n",
          "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.11, pytest-8.4.0, pluggy-1.6.0 -- /home/graham/workspace/shared_claude_docs/.venv/bin/python\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.11', 'Platform': 'Linux-6.8.0-57-generic-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.0', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'claude-test-reporter': '0.2.1', 'allure-pytest': '2.14.2', 'json-report': '1.5.0', 'asyncio': '1.0.0', 'anyio': '4.9.0'}}\nrootdir: /home/graham/workspace/experiments/youtube_transcripts\nconfigfile: pytest.ini\nplugins: metadata-3.1.1, claude-test-reporter-0.2.1, allure-pytest-2.14.2, json-report-1.5.0, asyncio-1.0.0, anyio-4.9.0\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 3 items\n\ntests/test_concurrent_processing.py::TestConcurrentProcessing::test_sqlite_concurrent_writes PASSED [ 33%]\ntests/test_concurre",
          "return_code": 0
        }
      ],
      "import_test": true
    },
    {
      "module": "Claude Test Reporter",
      "path": "/home/graham/workspace/experiments/claude-test-reporter",
      "has_venv": true,
      "has_requirements": false,
      "has_pyproject": true,
      "main_files": [
        "src/granger_common/rate_limiter.py",
        "src/granger_common/schema_manager.py",
        "src/granger_common/__init__.py",
        "src/granger_common/pdf_handler.py",
        "src/claude_test_reporter/pytest_plugin.py",
        "src/claude_test_reporter/__init__.py",
        "src/claude_test_reporter/config.py",
        "src/claude_test_reporter/agent_integration.py",
        "src/claude_test_reporter/monitoring/__init__.py",
        "src/claude_test_reporter/monitoring/hallucination_monitor.py",
        "src/claude_test_reporter/cli/validate.py",
        "src/claude_test_reporter/cli/slash_mcp_mixin.py",
        "src/claude_test_reporter/cli/main.py",
        "src/claude_test_reporter/cli/code_review.py",
        "src/claude_test_reporter/cli/__init__.py",
        "src/claude_test_reporter/analyzers/claim_verifier.py",
        "src/claude_test_reporter/analyzers/mock_detector.py",
        "src/claude_test_reporter/analyzers/integration_tester.py",
        "src/claude_test_reporter/analyzers/llm_test_analyzer.py",
        "src/claude_test_reporter/analyzers/__init__.py",
        "src/claude_test_reporter/analyzers/pattern_analyzer.py",
        "src/claude_test_reporter/analyzers/implementation_verifier.py",
        "src/claude_test_reporter/analyzers/comprehensive_analyzer.py",
        "src/claude_test_reporter/analyzers/realtime_monitor.py",
        "src/claude_test_reporter/analyzers/honeypot_enforcer.py",
        "src/claude_test_reporter/integrations/__init__.py",
        "src/claude_test_reporter/integrations/claude_test_reporter_module.py",
        "src/claude_test_reporter/core/test_result_verifier.py",
        "src/claude_test_reporter/core/report_config.py",
        "src/claude_test_reporter/core/__init__.py",
        "src/claude_test_reporter/core/code_reviewer.py",
        "src/claude_test_reporter/core/test_result_verifier_clean.py",
        "src/claude_test_reporter/core/test_validator.py",
        "src/claude_test_reporter/core/git_reviewer.py",
        "src/claude_test_reporter/core/test_reporter.py",
        "src/claude_test_reporter/core/adapters/__init__.py",
        "src/claude_test_reporter/core/adapters/agent_report_adapter.py",
        "src/claude_test_reporter/core/adapters/test_reporter.py",
        "src/claude_test_reporter/core/runners/__init__.py",
        "src/claude_test_reporter/core/runners/pytest_report_runner.py",
        "src/claude_test_reporter/core/generators/multi_project_dashboard.py",
        "src/claude_test_reporter/core/generators/markdown_generator.py",
        "src/claude_test_reporter/core/generators/enhanced_multi_project_dashboard.py",
        "src/claude_test_reporter/core/generators/__init__.py",
        "src/claude_test_reporter/core/generators/universal_report_generator.py",
        "src/claude_test_reporter/core/generators/html_generator.py",
        "src/claude_test_reporter/core/generators/simple_html_reporter.py",
        "src/claude_test_reporter/core/tracking/__init__.py",
        "src/claude_test_reporter/core/tracking/test_history_tracker.py",
        "src/claude_test_reporter/mcp/__init__.py",
        "src/claude_test_reporter/mcp/server.py",
        "src/claude-test-reporter/__init__.py",
        "src/claude-test-reporter/integrations/__init__.py"
      ],
      "test_results": [
        {
          "test_file": "/home/graham/workspace/experiments/claude-test-reporter/tests/test_basic.py",
          "passed": true,
          "error": "Cannot read termcap database;\nusing dumb terminal settings.\n",
          "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.11, pytest-8.4.0, pluggy-1.6.0 -- /home/graham/workspace/shared_claude_docs/.venv/bin/python\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.11', 'Platform': 'Linux-6.8.0-57-generic-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.0', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'claude-test-reporter': '0.2.1', 'allure-pytest': '2.14.2', 'json-report': '1.5.0', 'asyncio': '1.0.0', 'anyio': '4.9.0'}}\nrootdir: /home/graham/workspace/experiments/claude-test-reporter\nconfigfile: pytest.ini\nplugins: metadata-3.1.1, claude-test-reporter-0.2.1, allure-pytest-2.14.2, json-report-1.5.0, asyncio-1.0.0, anyio-4.9.0\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 2 items\n\ntests/test_basic.py::test_basic_import PASSED                            [ 50%]\ntests/test_basic.py::test_module_structure PA",
          "return_code": 0
        }
      ],
      "import_test": true
    }
  ],
  "working_count": 3
}